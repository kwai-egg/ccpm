#!/bin/bash
# ccpm - Claude Code Project Manager
# Main entry point for running ccpm commands from anywhere
# This script can be placed in PATH for global access

set -e  # Exit on error

# Find the ccpm installation directory
function find_ccpm_home() {
    # Check if CCPM_HOME is set
    if [[ -n "${CCPM_HOME:-}" ]] && [[ -d "$CCPM_HOME/.claude" ]]; then
        echo "$CCPM_HOME"
        return 0
    fi
    
    # Check if this script is symlinked from the ccpm installation
    local script_path="$(readlink -f "${BASH_SOURCE[0]}" 2>/dev/null || readlink "${BASH_SOURCE[0]}" 2>/dev/null || echo "${BASH_SOURCE[0]}")"
    local script_dir="$(dirname "$script_path")"
    
    if [[ -d "$script_dir/.claude" ]]; then
        echo "$script_dir"
        return 0
    fi
    
    # Check common installation locations
    if [[ -d "$HOME/.claude" ]]; then
        echo "$HOME"
        return 0
    fi
    
    if [[ -d "$HOME/.ccpm/.claude" ]]; then
        echo "$HOME/.ccpm"
        return 0
    fi
    
    # Not found
    return 1
}

# Main execution
function main() {
    local command="${1:-}"
    shift || true
    
    # Find ccpm installation
    local ccpm_home
    if ! ccpm_home=$(find_ccpm_home); then
        echo "Error: Could not find ccpm installation" >&2
        echo "Please set CCPM_HOME environment variable or ensure ~/.claude exists" >&2
        exit 1
    fi
    
    # Export for use by scripts
    export CCPM_HOME="$ccpm_home"
    export CLAUDE_USE_GLOBAL="true"
    
    # Handle different command types
    case "$command" in
        "")
            echo "ccpm - Claude Code Project Manager"
            echo ""
            echo "Usage: ccpm <command> [args...]"
            echo ""
            echo "Commands:"
            echo "  update       - Update ccpm to latest version"
            echo "  validate     - Validate ccpm installation"
            echo "  init         - Initialize ccpm in current project"
            echo "  help         - Show help information"
            echo "  status       - Show project status"
            echo "  standup      - Generate standup report"
            echo ""
            echo "For more commands, see: $ccpm_home/.claude/commands/"
            ;;
            
        update)
            exec "$ccpm_home/.claude/scripts/pm/update.sh" "$@"
            ;;
            
        validate)
            exec "$ccpm_home/.claude/scripts/pm/validate.sh" "$@"
            ;;
            
        init)
            exec "$ccpm_home/.claude/scripts/pm/init.sh" "$@"
            ;;
            
        help)
            exec "$ccpm_home/.claude/scripts/pm/help.sh" "$@"
            ;;
            
        status)
            exec "$ccpm_home/.claude/scripts/pm/status.sh" "$@"
            ;;
            
        standup)
            exec "$ccpm_home/.claude/scripts/pm/standup.sh" "$@"
            ;;
            
        *)
            # Try to find a matching script
            if [[ -f "$ccpm_home/.claude/scripts/pm/$command.sh" ]]; then
                exec "$ccpm_home/.claude/scripts/pm/$command.sh" "$@"
            else
                echo "Error: Unknown command: $command" >&2
                echo "Run 'ccpm help' for available commands" >&2
                exit 1
            fi
            ;;
    esac
}

main "$@"